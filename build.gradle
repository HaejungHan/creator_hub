plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.18'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'war' // WAR
}

group = 'com.academy'
version = '0.0.1-SNAPSHOT'
apply plugin: 'war'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
    sourceCompatibility = '11'
    targetCompatibility = '11'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // JSP
    implementation group: 'org.apache.tomcat.embed', name: 'tomcat-embed-jasper'
    implementation group: 'javax.servlet', name: 'jstl', version: '1.2'
    // Tomcat server
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
    // YouTube API
    implementation 'com.google.api-client:google-api-client:1.33.0'
    implementation 'com.google.apis:google-api-services-youtube:v3-rev20230816-2.0.0'
    implementation 'com.google.http-client:google-http-client-jackson2:1.39.2'
    // Spark 의존성 추가
    implementation 'org.apache.spark:spark-core_2.12:3.5.3'
    implementation 'org.apache.spark:spark-sql_2.12:3.5.3'
    implementation 'org.apache.spark:spark-streaming_2.12:3.5.3'
    implementation 'org.apache.spark:spark-mllib_2.12:3.5.3'
    // MongoDB
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    // Janino 의존성 추가
    implementation 'org.codehaus.janino:janino:3.1.4'

    // spring batch
    implementation 'org.springframework.batch:spring-batch-core'
    implementation 'org.springframework.boot:spring-boot-starter-batch'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security:2.7.18'
    implementation 'org.springframework.boot:spring-boot-starter-logging'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.named('war') {
    enabled = true // WAR 파일 생성 가능
}

tasks.named('bootWar') {
    enabled = true // Spring Boot WAR 생성 가능
}

tasks.withType(JavaExec) {
    jvmArgs '--add-opens', 'java.base/java.nio=ALL-UNNAMED'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
